{"version":3,"sources":["personServices.js","App.js","index.js"],"names":["baseUrl","exportedObject","getAllPeople","axios","get","then","response","data","createPerson","newObject","post","updatePerson","id","put","deletePerson","delete","Filter","setSearchQuery","type","onChange","e","target","value","PersonForm","newName","setNewName","newNumber","setNewNumber","handleAddName","onClick","Persons","persons","searchQuery","handleDelete","filter","person","name","toLowerCase","includes","map","number","Notification","message","success","className","App","useState","setPersons","notification","setNotification","useEffect","personServices","preventDefault","duplicate","length","window","confirm","updatedPerson","res","copy","idx","indexOf","setTimeout","catch","error","newPerson","resPerson","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cffb0658.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n\nconst getAllPeople = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst createPerson = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst updatePerson = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => response.data)\n}\n\nconst exportedObject = {\n  getAllPeople,\n  createPerson,\n  updatePerson,\n  deletePerson,\n}\n\nexport default exportedObject\n","import React, { useState, useEffect } from \"react\"\nimport personServices from \"./personServices\"\n\nconst Filter = ({ setSearchQuery }) => {\n  return (\n    <>\n      filter shown with{\" \"}\n      <input type=\"text\" onChange={(e) => setSearchQuery(e.target.value)} />\n    </>\n  )\n}\n\nconst PersonForm = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  handleAddName,\n}) => {\n  return (\n    <form>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(e) => setNewNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={handleAddName}>\n          add\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, searchQuery, handleDelete }) => {\n  return persons\n    .filter((person) =>\n      person.name.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .map((person) => (\n      <div key={person.name}>\n        {person.name} {person.number}{\" \"}\n        <button onClick={() => handleDelete(person)}>delete</button>\n      </div>\n    ))\n}\n\nconst Notification = ({ message }) => {\n  if (message == null) {\n    return null\n  } else if (message.success) {\n    return <div className=\"success\">{message.message}</div>\n  } else {\n    return <div className=\"error\">{message.message}</div>\n  }\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personServices.getAllPeople().then((persons) => setPersons(persons))\n  }, [])\n\n  const findDuplicate = (name) => {\n    return persons.filter((person) => {\n      return person.name === name\n    })\n  }\n\n  const handleAddName = (e) => {\n    e.preventDefault()\n    const duplicate = findDuplicate(newName)\n\n    // update phone number\n    if (duplicate.length === 1) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const updatedPerson = {\n          name: newName,\n          number: newNumber,\n        }\n\n        personServices\n          .updatePerson(duplicate[0].id, updatedPerson)\n          .then((res) => {\n            const copy = [...persons]\n            const idx = copy.indexOf(duplicate[0])\n            copy[idx] = res\n            setPersons(copy)\n\n            setNotification({\n              success: true,\n              message: `Changed ${newName}'s number to ${newNumber}`,\n            })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            setNotification({\n              error: true,\n              message: error.response.data.error,\n            })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n    } else {\n      // create new entry in phonebook\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n\n      personServices\n        .createPerson(newPerson)\n        .then((resPerson) => {\n          const copy = [...persons]\n          copy.push(resPerson)\n          setPersons(copy)\n\n          setNotification({ success: true, message: `Added ${newName}` })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setNotification({\n            error: true,\n            message: error.response.data.error,\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n  }\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personServices\n        .deletePerson(person.id)\n        .then((res) => {\n          const idx = persons.indexOf(person)\n          const copy = [...persons]\n          copy.splice(idx, 1)\n          setPersons(copy)\n\n          setNotification({\n            success: true,\n            message: `${person.name} successfully deleted`,\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setNotification({\n            error: true,\n            message: `Error removing ${newName} from the phonebook: ${error}`,\n          })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification} />\n\n      <Filter setSearchQuery={setSearchQuery} />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleAddName={handleAddName}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        searchQuery={searchQuery}\n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}